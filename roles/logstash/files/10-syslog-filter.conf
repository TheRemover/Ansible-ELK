    filter {
      if [type] == "log" {
        grok {
          match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
          add_field => [ "received_at", "%{@timestamp}" ]
          add_field => [ "received_from", "%{host}" ]
        }
        syslog_pri { }
        date {
          match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
        }
      }
      if [type] =="ufw" {
        grok{
          match => { "message" => "%{SYSLOGTIMESTAMP:ufw_timestamp} %{SYSLOGHOST:ufw_hostname} %{GREEDYDATA} \[UFW %{WORD:ufw_action}\] %{GREEDYDATA} SRC=%{IP:ufw_src_ip} DST=%{IP:ufw_dest_ip} %{GREEDYDATA:ufw_tcp_opts} PROTO=%{DATA:ufw_protocol} SPT=%{INT:ufw_src_port} DPT=%{INT:ufw_dst_port}" }
          add_field => [ "received_at", "%{@timestamp}" ]
	}
        geoip { source => "ufw_src_ip" }
        mutate {
          remove_field => [ "message" ]
        }
      }
      if [type] =="dns" {
        grok{
          match => { "message" => "%{SYSLOGTIMESTAMP:ufw_timestamp} dnsmasq\[%{INT}\]: %{DATA:dns_type} %{DATA:dns_query} %{GREEDYDATA}" }
          add_field => [ "received_at", "%{@timestamp}" ]
          add_field => [ "received_from", "%{host}" ]
        }
        mutate {
          remove_field => [ "message" ]
        }
      }
      if [type] =="snoopy" {
        grok{
          match => { "message" => "%{SYSLOGTIMESTAMP:ufw_timestamp} jump snoopy\[%{INT}\]: \[uid:%{INT:snoopy_uid} sid:%{INT:snoopy_sid} tty:%{DATA:snoopy_tty} cwd:%{DATA:snoopy_cwd} filename:%{DATA:snoopy_filename}]:%{GREEDYDATA:snoopy_msg}" }
          add_field => [ "received_at", "%{@timestamp}" ]
          add_field => [ "received_from", "%{host}" ]
        }
        mutate {
          remove_field => [ "message" ]
        }
      }
    }

